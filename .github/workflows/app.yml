name: Build for Android publish to Play Store

on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
    
jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
  
    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.37.x'
        cache: true
        
    - name: Restore packages
      working-directory: .
      run: flutter pub get

    - name: Download Android keystore
      run: echo "${{ secrets.GOOGLE_PLAY_SIGNING_KEY }}" | base64 --decode > /tmp/key.jks

    - name: Create key.properties
      run: |
        rm -f -- ./android/key.properties
        touch ./android/key.properties
        echo "storeFile=/tmp/key.jks" >> ./android/key.properties
        echo "storePassword=${{ secrets.GOOGLE_PLAY_SIGNING_KEY_STORE_PASSWORD }}" >> ./android/key.properties
        echo "keyPassword=${{ secrets.GOOGLE_PLAY_SIGNING_KEY_PASSWORD }}" >> ./android/key.properties
        echo "keyAlias=upload" >> ./android/key.properties

#    - name: Generate build number
#      id: buildnumber
#      uses: onyxmueller/build-tag-number@v1
#      with:
#        token: ${{secrets.github_token}}

    - name: Build for Android
      working-directory: .
      run: flutter build appbundle --release --no-tree-shake-icons --build-number=${{github.run_number}}

    - uses: actions/upload-artifact@v4
      name: Upload android appbundle artifact 
      with:
        name: appbundle
        path: ./build/app/outputs/bundle/release/app-release.aab
        
  release-android:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    needs: [build-android]
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: appbundle
    - name: Upload Android Release to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: dev.curth.watchable
        releaseFiles: ./app-release.aab
        track: internal

       
#  production-android:
#    runs-on: ubuntu-latest
#    if: ${{ github.event_name != 'pull_request' }}
#    needs: [release-android]
#    environment:
#        name: Production
#    steps:
#    - name: Promote release to open testing
#      uses: kevin-david/promote-play-release@v1.0.0
#      with:
#        service-account-json-raw: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
#        package-name: dev.curth.watchable
#        from-track: internal
#        to-track: beta
